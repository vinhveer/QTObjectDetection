name: Build Object Detection App

on:
  push:
    tags:
      - 'v*'  # Chạy khi có tag mới (ví dụ: v1.0.0)

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            exe_ext: .exe
          - os: ubuntu-latest
            exe_ext: ''
          - os: macos-latest
            exe_ext: ''

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build App for Windows
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name MyApp --icon=icons/app.ico main.py
      
    - name: Build App for MacOS
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed --name MyApp --icon=icons/app.icns main.py

    - name: Build App for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --windowed --name MyApp main.py

    - name: Get Version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      shell: bash

    - name: Create ZIP (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        powershell Compress-Archive -Path dist\MyApp.exe -DestinationPath MyApp-${{ env.VERSION }}-${{ runner.os }}.zip

    - name: Create ZIP (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        zip -j MyApp-${{ env.VERSION }}-${{ runner.os }}.zip dist/MyApp${{ matrix.exe_ext }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: MyApp-${{ env.VERSION }}-${{ runner.os }}
        path: MyApp-${{ env.VERSION }}-${{ runner.os }}.zip
        retention-days: 5

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: artifacts/

    - name: Publish Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}